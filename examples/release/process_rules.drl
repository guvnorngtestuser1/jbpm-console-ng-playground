package org.jbpm.examples;


import java.util.Map;
import java.util.HashMap;
import org.kie.runtime.process.ProcessInstance;
import org.jbpm.workflow.instance.impl.WorkflowProcessInstanceImpl;
import org.kie.event.process.*;

global java.util.List rulesFired;

declare ProcessStartedEvent
	@role(event)
end
declare ProcessCompletedEvent
	@role(event)
end

declare ProcessNodeTriggeredEvent
	@role(event)
end

query getProcessInstances()
    $w: WorkflowProcessInstanceImpl( )
end

rule "Ongoing process for more than 15 seconds"
 when
	$w: WorkflowProcessInstanceImpl( )
	$pse: ProcessStartedEvent(processInstance == $w) from entry-point "process-events"
        not(ProcessCompletedEvent(processInstance == $w,  this after[0s, 15s] $pse ) from entry-point "process-events") 
 then
	System.out.println("The Process Instance (id="+$w.getId()+") is taking too long!");
	rulesFired.add("The Process Instance (id="+$w.getId()+") is taking too long!");
end


rule "Warn Process Instance not finished after 35 seconds"
 when
	$w: WorkflowProcessInstanceImpl( )
	$pse: ProcessStartedEvent(processInstance == $w) from entry-point "process-events"
        not(ProcessCompletedEvent(processInstance == $w,  this after[0s, 35s] $pse ) from entry-point "process-events") 
 then
	System.out.println("WARN: The Process Instance (id="+$w.getId()+") will be aborted in 2 minutes!");
	rulesFired.add("WARN: The Process Instance (id="+$w.getId()+") will be aborted in 2 minutes!");
end


rule "Warn Two Process Instance doing a Release on the same Directory"
 when
	$w1: WorkflowProcessInstanceImpl($releasePath1: variables['release_path'] )
	$w2: WorkflowProcessInstanceImpl( id > $w1.id  , variables['release_path'] == $releasePath1)
 then
	System.out.println("WARN: The Process Instance (id="+$w2.getId()+") is using the same Release Path than "+$w1.getId() +" -> "+$releasePath1);
	rulesFired.add("WARN: The Process Instance (id="+$w2.getId()+") is using the same Release Path than "+$w1.getId()+" -> "+$releasePath1);
        System.out.println("SEVERE: Aborting the process: "+$w2.getId());	
        kcontext.getKnowledgeRuntime().abortProcessInstance($w2.getId());
end

rule "More than two Fix Issues for the same Release Process Instance"
  when
	$w1: WorkflowProcessInstanceImpl($id: id)
	Number( intValue > 1) from accumulate($e: ProcessNodeTriggeredEvent(processInstance.id == $id, nodeInstance.nodeName == "Fix Issues") from entry-point "process-events", count($e))

  then
	System.out.println("WARN: The Process Instance (id="+$w1.getId()+") has being rejected at least 2 times");
	rulesFired.add("WARN: The Process Instance (id="+$w1.getId()+") has being rejected at least 2 times");
end

